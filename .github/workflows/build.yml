name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: [ windows-latest ]

    strategy:
      matrix:
        buildtype: [ RelWithDebInfo, Debug ]

    steps:
    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup VS environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Generate projects
      run: |
        mkdir _build-${{ matrix.buildtype }}
        cd _build-${{ matrix.buildtype }}
        cmake -G Ninja `
          -DCMAKE_BUILD_TYPE=${{ matrix.buildtype }} `
          -DCMAKE_CXX_COMPILER=cl `
          -DCMAKE_C_COMPILER=cl `
          ..

    - name: Build
      run: |
        cmake --build _build-${{ matrix.buildtype }}

    - name: Copy SDK and loader artifacts
      run: |
        cd _build-${{ matrix.buildtype }}
        mkdir _sdk
        Copy-Item ZHMModSDK/ZHMModSDK.dll -Destination _sdk/
        Copy-Item ZHMModSDK/ZHMModSDK.pdb -Destination _sdk/
        Copy-Item DirectInputProxy/dinput8.dll -Destination _sdk/
        Copy-Item DirectInputProxy/dinput8.pdb -Destination _sdk/

    - name: Copy mod artifacts
      run: |
        cd _build-${{ matrix.buildtype }}
        mkdir _mods
        Get-ChildItem -Directory Mods | ForEach-Object { Copy-Item (Join-Path $_.FullName ($_.Name + ".dll")) -Destination (Join-Path "_mods"  ($_.Name + ".dll")) }
        Get-ChildItem -Directory Mods | ForEach-Object { Copy-Item (Join-Path $_.FullName ($_.Name + ".pdb")) -Destination (Join-Path "_mods"  ($_.Name + ".pdb")) }

    - name: Archive SDK and loader
      uses: actions/upload-artifact@v2
      with:
        name: mod-loader-${{ matrix.buildtype }}
        path: |
          _build-${{ matrix.buildtype }}/_sdk/*

    - name: Archive mods
      uses: actions/upload-artifact@v2
      with:
        name: mods-${{ matrix.buildtype }}
        path: |
          _build-${{ matrix.buildtype }}/_mods/*